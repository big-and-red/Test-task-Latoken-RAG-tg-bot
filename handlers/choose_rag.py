# handlers/choose_rag.py
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes, CallbackQueryHandler, CommandHandler
from db.repos.active_rag_repo import ActiveRagSourceRepo


async def choose_rag_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /choose_rag"""
    user_id = update.effective_user.id

    # –ü–æ–ª—É—á–∞–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –∞–∫—Ç–∏–≤–Ω—ã—Ö RAG-–∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –∏–∑ –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –±–æ—Ç–∞
    active_rag_repo: ActiveRagSourceRepo = context.bot_data['active_rag_repo']

    sources = active_rag_repo.get_all_sources()

    if not sources:
        await update.message.reply_text(
            "‚ùå –í —Å–∏—Å—Ç–µ–º–µ –ø–æ–∫–∞ –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö RAG –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤.\n"
            "–î–æ–±–∞–≤—å—Ç–µ –Ω–æ–≤—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫ —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã /add_rag_source"
        )
        return

    keyboard = []
    for source in sources:
        keyboard.append([InlineKeyboardButton(
            f"{source.name}",
            callback_data=f"choose_rag_{source.id}"
        )])

    reply_markup = InlineKeyboardMarkup(keyboard)

    await update.message.reply_text(
        "üìö –í—ã–±–µ—Ä–∏—Ç–µ RAG –∏—Å—Ç–æ—á–Ω–∏–∫ –¥–ª—è —Ä–∞–±–æ—Ç—ã:",
        reply_markup=reply_markup
    )


async def choose_rag_callback(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ RAG –∏—Å—Ç–æ—á–Ω–∏–∫–∞"""
    query = update.callback_query
    user_id = update.effective_user.id

    source_id = query.data.replace("choose_rag_", "")

    active_rag_repo: ActiveRagSourceRepo = context.bot_data['active_rag_repo']
    active_rag_repo.set_active_source(user_id, source_id)

    source = active_rag_repo.get_active_source(user_id)

    await query.answer()
    await query.edit_message_text(
        f"‚úÖ –í—ã–±—Ä–∞–Ω –∏—Å—Ç–æ—á–Ω–∏–∫: {source.name}\n"
        "–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å –¥–∏–∞–ª–æ–≥ –∫–æ–º–∞–Ω–¥–æ–π /qviz"
    )
